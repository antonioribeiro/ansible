---

#######################
#
#  Hostname and root
#

server_hostname: "{{ ansible_hostname }}"

root_username: "root" # don"t touch this, unless you really have a different name for it

#######################
#
#  Default Editor
#

default_editor: vim

#######################
#
#  Workstation
#

workstation_ip_address: "YOUR-WORKSTATION-IP-ADDRESS" # some rights will be given just for this IP address



#######################
#
#  Users and passwords
#
#

user_with_sudo_power: "YOUR-BOX-MAIN-USERNAME"

mysql_root_username: "{{ root_username }}"
mysql_root_password: "PASSWORD"

postgresql_system_user: "postgres"
postgresql_system_user_password: "password"
postgresql_system_user_password_hashed: "$1$2zB3D4a0$oNfxJGHSNRlOzZpj6Cs8W/"
# created using python -c "import crypt; print crypt.crypt('password', '$1$2zB3D4a0Z$')"

postgresql_db_user: "{{ user_with_sudo_power }}"
postgresql_db_password: "password"



#######################
#
#  System properties
#

php_version: "7.0"

etc_path: "/etc" # general configuration folder

scripts_path: "/etc/scripts" # general scripts folder

temporary_files_path: "/tmp"

upstart_path: "/etc/init"

reboot_command: "/sbin/reboot"



#######################
#
#  System Administrator - Ansible will create this user for you and give root (sudo) power to it
#
#

system_administrator_name: "" # keep this blank to not create this user
system_administrator_comment: ***-Administrator Full Name-***
system_administrator_uid: "9999"
system_administrator_password: "$6$SALT$3MUMz4cNIRjQ/Knnc3gXjJLV1vdwFs2nLvh//nGtEh/.li04NodZJSfnc4jeCVHd7kKHGnq5MsenN.tO6Z.Cj/"

# to generate a new one, replace with your data and run in the terminal:
#    python -c "from passlib.hash import sha512_crypt; print sha512_crypt.encrypt("yourpassword")"

########################
#
# Webserver general info
#
#

webserver_username: "www-data" # Webserver user

webserver_document_root: "/var/www" # Document root: where are you storing your pages?



########################
#
# Laravel
#
#

laravel_installer_version: "*"

laravel_liferaft_version: "*"

laravel_document_root: "{{ webserver_document_root }}/laravel" # Where your Laravel site files should be stored?

laravel_site_base_url: "/laravel" # Site base URL - http://localhost/ == "/"

laravel_artisan_executable: "/usr/local/bin/artisan"

laravel_craft_executable: "/usr/local/bin/laravel"

### First Laravel site
# Creates http://laravel.dev at /var/www/laravel

laravel_site_folder_name: laravel

laravel_site_host_name: laravel.dev

########################
#
# PHP - php.ini configuration
#
#

php_config_directory: "/etc/php5"
php_max_execution_time: "90"
php_display_errors: "On"
php_display_startup_errors: "On"
php_html_errors: "On"
php_post_max_size: "32M"
php_upload_max_filesize: "32M"
php_date_timezone: "America/Sao_Paulo"



########################
#
# PHP-FPM
#
#

php_fpm_config_directory: "{{ php_config_directory }}/fpm/"



########################
#
# APC - apc.ini configuration
#
#

apc_rfc1867: "1"
apc_shm_size: "256M"
apc_shm_segments: "1"
apc_num_files_hint: "0"



########################
#
# MySQL - my.cnf configuration
#
#

mysql_max_allowed_packet: "128M"
mysql_character_set_server: "utf8"
mysql_collation_server: "utf8_general_ci"
innodb_file_per_table: "innodb_file_per_table"

mysql_secondary_user: "" # keep it blank to not create a secondary user
mysql_secondary_password: "PASSWORD"
mysql_phpmyadmin_password: "PASSWORD"
mysql_configuration_path: "/etc/mysql"



########################
#
# PostgreSQL
#
#

postgresql_version: "9.4"
postgresql_db_name: "phpboxdev"



########################
#
# Apache 2
#
#

apache_server_admin: "webmaster@example.com"
apache_server_alias: "*.*.example.com"
apache_config_directory: "/etc/apache2"



########################
#
# Nginx
#
#

nginx_delete_default_vhost: false
nginx_user: "{{ webserver_username }}"
nginx_worker_processes: "{{ ansible_processor_count }}"
nginx_pid: "/var/run/nginx.pid"
nginx_worker_connections: "8000"
nginx_worker_rlimit_nofile: "10000"
nginx_config_directory: "/etc/nginx"
nginx_logs_directory: "/var/log/nginx"



########################
#
# Grunt -- check for versions here: https://github.com/gruntjs/grunt/wiki
#
#

grunt_version: "0.4.1"



########################
#
# Composer
#
#

composer_home: "/usr/local/share/composer"
composer_executable: "/usr/local/bin/composer"



########################
#
# Beanstalkd
#
#

beanstalkd_server_hostname: "{{ ansible_hostname }}"
beanstalkd_server_port: "11300"



########################
#
# PHPUnit
#
#

phpunit_directory: "/usr/share/phpunit"
phpunit_executable: "/usr/local/bin/phpunit"
phpunit_version: "*"



########################
#
# PHPSpec
#
#

phpspec_directory: "/usr/share/phpspec"
phpspec_executable: "/usr/local/bin/phpspec"
phpspec_version: "*"


########################
#
# Docker
#
#

docker_executable: "/usr/local/bin/docker"



########################
#
# Squid
#
#

squid_config_directory: "/etc/squid3"



########################
#
# Codeception
#
#

codeception_version: "*"



########################
#
# PhantomJS
#
#

phantomjs_directory: "/usr/share/phantomjs"
phantomjs_executable: "/usr/local/bin/phantomjs"
phantomjs_version: "1.9.7"
phantomjs_file_name: "phantomjs-{{ phantomjs_version }}-linux-x86_64"

minidump_stackwalk_executable: "/usr/local/bin/minidump_stackwalk"

########################
#
# Selenium
#
#

selenium_server_major: 2
selenium_server_minor: 48
selenium_server_patch: 2
selenium_server_version: "{{selenium_server_major}}.{{selenium_server_minor}}.{{selenium_server_patch}}"

selenium_jar_file: "selenium-server-standalone-{{selenium_server_version}}.jar"

selenium_download_url: "http://selenium-release.storage.googleapis.com/{{selenium_server_major}}.{{selenium_server_minor}}/{{selenium_jar_file}}"

selenium_sel_role: standalone
selenium_destination_path: "/usr/local/lib/selenium"

selenium_hub: ''
selenium_java_opts: ''
selenium_extra_args: ''
selenium_port: ''
