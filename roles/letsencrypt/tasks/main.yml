---
#- apt: update_cache=yes cache_valid_time=3600
#  tags: letsencrypt

- name: Letsencrypt | Install depends
  apt: name={{ item }} state=present
  with_items:
    - python
    - python-dev
    - python-virtualenv
    - gcc
    - dialog
    - libaugeas0
    - libssl-dev
    - libffi-dev
    - ca-certificates
    - python-pip
    - git
  tags: letsencrypt

- name: Letsencrypt | Install virtualenv (Debian)
  apt: name={{ item }} state=present
  with_items:
    - virtualenv
  when: ansible_distribution == 'Debian' and ansible_lsb.codename !=  "wheezy"
  tags: letsencrypt

- name: Letsencrypt | Install python depends
  pip: virtualenv="{{ letsencrypt_venv }}" virtualenv_site_packages=no name={{ item }} state=latest
  with_items:
    - setuptools
    - pip
  tags: letsencrypt

- name: Letsencrypt | More python depends
  pip: virtualenv="{{ letsencrypt_venv }}" virtualenv_site_packages=no name=letsencrypt state=latest
  tags: letsencrypt

#- name: Letsencrypt | Ensure webroot exists
#  file: path="{{ letsencrypt_webroot_path }}" state=directory recurse=yes mode="a+rw"
#  tags: letsencrypt

- name: Letsencrypt | Attempt to get the certificate using the webroot authenticator
  command: "{{ letsencrypt_command }} -a webroot --webroot-path {{ letsencrypt_webroot_path }} certonly"
  args:
    creates: "/etc/letsencrypt/live/{{ letsencrypt_cert_domains[0] }}"
  when: letsencrypt_authenticator == "webroot"
  ignore_errors: True
  tags: letsencrypt

- name: Letsencrypt | Attempt to get the certificate using the standalone authenticator (in case eg the webserver isn't running yet)
  command: "{{ letsencrypt_command }} -a standalone auth"
  args:
    creates: "/etc/letsencrypt/live/{{ letsencrypt_cert_domains[0] }}"
  tags: letsencrypt

- name: Letsencrypt | Fix the renewal file
  ini_file: section=renewalparams option={{ item.key }} value={{ item.value }} dest="/etc/letsencrypt/renewal/{{ letsencrypt_cert_domains[0] }}.conf"
  with_dict:
    os_packages_only: False
    verb: certonly
    noninteractive_mode: False
    uir: False
    hsts: False
    authenticator: '{{ letsencrypt_authenticator }}'
  tags: letsencrypt

- name: Letsencrypt | Fix the webroot map in the renewal file
  ini_file: section="[webroot_map]" option={{ item }} value={{ letsencrypt_webroot_path }} dest="/etc/letsencrypt/renewal/{{ letsencrypt_cert_domains[0] }}.conf"
  with_items: "{{ letsencrypt_cert_domains }}"
  tags: letsencrypt

- name: Letsencrypt | Install renewal cron
  cron: name="Let's Encrypt Renewal" day="{{ letsencrypt_renewal_frequency.day }}" hour="{{ letsencrypt_renewal_frequency.hour }}" minute="{{ letsencrypt_renewal_frequency.minute }}" job="{{ letsencrypt_venv }}/bin/letsencrypt renew > /dev/null"
  tags: letsencrypt
