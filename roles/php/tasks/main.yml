---

####### look for installed stuff

- name: Detector | Check if apache2 is installed
  shell: apt-cache policy apache2 | grep Installed | grep -v "(none)"
  register: apache2
  ignore_errors: true
  tags:
    - php

- name: Detector | Check if nginx is installed
  shell: apt-cache policy nginx | grep Installed | grep -v "(none)"
  register: nginx
  ignore_errors: true
  tags:
    - php

########## Set variables

- name: PHP | Set PHP 7 variables
  set_fact:
    php_config_directory: "/etc/php/7.0"
  when:
    php_version == "7.0"
  tags: php

- name: PHP | Set PHP 5 variables
  set_fact:
    php_config_directory: "/etc/php5"
  when:
    (php_version == "5.4") or
    (php_version == "5.5") or
    (php_version == "5.6")
  tags: php

########## Start

- name: PHP | Add Ondrej's PPA for PHP 7
  apt_repository:
    repo=ppa:ondrej/php-7.0
    update_cache=yes
  when:
    php_version == "7.0"
  tags: php

- name: PHP | Add Ondrej's PPA for PHP 5.6
  apt_repository:
    repo=ppa:ondrej/php5-5.6
    update_cache=yes
  when:
    php_version == "5.6"
  tags: php


- name: PHP | Add Ondrej's PPA for PHP 5.5
  apt_repository:
    repo=ppa:ondrej/php5
    update_cache=yes
  when:
    php_version == "5.5" and
    not (ansible_distribution == 'Ubuntu' and (ansible_distribution_release == 'saucy' or ansible_distribution_release == 'trusty'))
  tags: php


- name: PHP | Add Ondrej's PPA for PHP 5.4
  apt_repository:
    repo=ppa:ondrej/php5-oldstable
    update_cache=yes
  when:
    php_version == "5.4"
  tags: php


- name: PHP | Install PHP and all related packages
  apt:
    pkg={{ item }}
    state=latest
  register: result
  with_items:
     - php{{ php_packages_version }}
     - php{{ php_packages_version }}-cli
     - php{{ php_packages_version }}-dev
     - php{{ php_packages_version }}-cgi
     - php{{ php_packages_version }}-common
     - php{{ php_packages_version }}-fpm
     - php{{ php_packages_version }}-ldap
     - php-sqlite3
     - php-gd
     - php-pgsql
     - php-curl
     - php-imap
     - php-mysql
  tags: php

- name: PHP | Install 5.x related packages
  apt:
    pkg={{ item }}
    state=latest
  register: result
  with_items:
    - php5-imagick
    - php5-mcrypt
    - php5-memcached
    - php5-xdebug
    - php5-xmlrpc
    - php5-readline
    - php5-mysqlnd
    - php5-gmp
    - php-xml-parser
    - libmagickwand-dev
    - php-gettext
    - php-pear
    - php-apc
  tags: php
  when:
    (php_version == "5.4") or
    (php_version == "5.5") or
    (php_version == "5.6")

- name: PHP | Install XDebug
  command: pecl install xdebug
           creates=/usr/share/php/.registry/.channel.pecl.php.net/xdebug.reg
  tags: php
  when:
    (php_version == "5.4") or
    (php_version == "5.5") or
    (php_version == "5.6")


- name: PHP | Install APC
  shell: printf "\n" | sudo pecl install apc
           creates=/usr/share/php/.registry/.channel.pecl.php.net/apc.reg
  when: php_version == "5.4"
  tags: php
  when:
    (php_version == "5.4") or
    (php_version == "5.5") or
    (php_version == "5.6")


- name: PHP | Install Imagick
  command: pecl install imagick
           creates=/usr/share/php/.registry/.channel.pecl.php.net/imagick.reg
  tags: php
  when:
    (php_version == "5.4") or
    (php_version == "5.5") or
    (php_version == "5.6")


- name: PHP | Browsecap download
  command: wget -N --output-document={{ php_config_directory }}/browscap.ini http://browscap.org/stream?q=PHP_BrowsCapINI
           creates={{ php_config_directory }}/browscap.ini
  tags: php


- name: PHP | Remove formatting errors from php ini files
  shell:
    sed -i ':a;N;$!ba;s/\n ;/\n;/g' {{ item }}
  with_items:
    - '{{ php_config_directory }}/cgi/php.ini'
    - '{{ php_config_directory }}/cli/php.ini'
    - '{{ php_config_directory }}/fpm/php.ini'
  tags: php


####### Configure modules

- name: Detector | Check if mcrypt is installed
  shell: php -m | grep mcrypt
  register: mcrypt
  ignore_errors: true
  tags:
    - php

- name: Enable MCrypt module
  lineinfile:
    dest={{ item }}
    regexp='^extension.*mcrypt.so'
    line='extension=mcrypt.so'
  with_items:
    - '{{ php_config_directory }}/cgi/php.ini'
    - '{{ php_config_directory }}/cli/php.ini'
    - '{{ php_config_directory }}/fpm/php.ini'
  when:
     mcrypt.rc == 1 # not installed
  notify:
     - restart php
  tags: php



#############

- name: PHP | Browsecap configure ini files
  ini_file:
    dest={{ item }}
    section=browscap
    option=browscap
    value={{ php_config_directory }}/browscap.ini
    backup=yes
  with_items:
    - '{{ php_config_directory }}/cgi/php.ini'
    - '{{ php_config_directory }}/cli/php.ini'
    - '{{ php_config_directory }}/fpm/php.ini'
  tags: php


- name: PHP | configure FPM fix_pathinfo
  ini_file:
    dest={{ php_config_directory }}/fpm/php.ini
    section=PHP
    option=cgi.fix_pathinfo
    value=0
    backup=yes
  tags: php


- name: PHP | configure FPM post_max_size
  ini_file:
    dest={{ php_config_directory }}/fpm/php.ini
    section=PHP
    option=post_max_size
    value=8M
    backup=yes
  tags: php


- name: PHP | configure FPM upload_max_filesize
  ini_file:
    dest={{ php_config_directory }}/fpm/php.ini
    section=PHP
    option=upload_max_filesize
    value=8M
    backup=yes
  tags: php


- name: PHP | configure FPM max_file_uploads
  ini_file:
    dest={{ php_config_directory }}/fpm/php.ini
    section=PHP
    option=max_file_uploads
    value=5
    backup=yes
  tags: php


- name: PHP | configure FPM expose_php
  ini_file:
    dest={{ php_config_directory }}/fpm/php.ini
    section=PHP
    option=expose_php
    value=off
    backup=yes
  tags: php


- name: PHP | APC Cache configuration file, apc.ini
  template:
    src=../../../global/templates/php/etc-php5-conf-d-apc-ini.j2
    dest={{ php_config_directory }}/cli/conf.d/apc.ini
  when: php_version == "5.4"
  tags: php


- name: PHP | APC Cache configuration file, apc.ini
  template:
    src=../../../global/templates/php/etc-php5-conf-d-apc-ini.j2
    dest={{ php_config_directory }}/cgi/conf.d/apc.ini
  when:
     apache2.rc == 0 # exists
  tags: php


- name: PHP | Restart apache
  service:
    name=apache2
    state=restarted
  when:
     apache2.rc == 0 # exists
  tags: php

- name: PHP | Restart nginx
  service:
    name=nginx
    state=restarted
  when:
     nginx.rc == 0 # exists
  tags: php

